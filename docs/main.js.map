{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/helper.service.ts","./src/app/cowin.service.ts","./src/app/ui-helper.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  //cowin : \"https://cdn-api.co-vin.in/api/v2\",\n  cowin : \"https://cdndemo-api.co-vin.in/api/v2\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<!-- Toolbar -->\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-10\">\n      <h3>\n        Covid-19 automatic vaccine bookings and availability tracking in India\n      </h3>\n      <p>\n        This web-app can continously track for availability of vaccine and\n        proceed with booking on your behalf if you are logged in.\n      </p>\n      <br /><br />\n    </div>\n  </div>\n\n  <form>\n\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <div class=\"input-group mb-3\">\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            placeholder=\"Recipient's Mobile\"\n            name=\"mobile\"\n            [(ngModel)]=\"mobile\"\n            [disabled]=\"disableMobile\"\n            aria-label=\"Phone number\"\n            aria-describedby=\"basic-addon2\"\n          />\n          <div class=\"input-group-append\">\n            <button\n              class=\"btn btn-outline-secondary\"\n              type=\"button\"\n              [disabled]=\"disableMobile\"\n              (click)=\"sendOtp()\"\n            >\n              Login\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-4\">\n\n        <div class=\"input-group mb-3\">\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            placeholder=\"OTP\"\n            name=\"otp\"\n            [(ngModel)]=\"otp\"\n            [disabled]=\"disableOtp\"\n            aria-label=\"otp\"\n            aria-describedby=\"basic-addon2\"\n          />\n          <div class=\"input-group-append\">\n            <button\n              class=\"btn btn-outline-secondary\"\n              type=\"button\"\n              [disabled]=\"disableOtp\"\n              (click)=\"validateOtp();disableOtp=true;showCancel=true\"\n            >\n              Validate Otp\n            </button>\n          </div>\n\n        </div>\n      </div>\n      <div class=\"col-4\">\n        <button\n          class=\"btn btn-warning\"\n          type=\"button\"\n          *ngIf=\"showCancel\"\n          (click)=\"cancelLogin();disableMobile=false;disableOtp=true\"\n        >\n         Cancel\n        </button>\n      </div>\n    </div>\n    <hr />\n    <h5>Users Preference</h5>\n    <hr />\n    <!--\n        Vaccine Type - Covisheild, covaxin, sputnik, any\n       -->\n    <div class=\"row\">\n      <div class=\"col-8\">\n        <div class=\"form-check form-check-inline\">\n          <b>Vaccine Type</b> &nbsp;\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"vaccine\"\n            id=\"covaxin\"\n            value=\"COVAXIN\"\n            (click)=\"getHospitalData()\"\n            [(ngModel)]=\"vaccineType\"\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio1\">COVAXIN</label>\n        </div>\n\n        <div class=\"form-check form-check-inline\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"vaccine\"\n            id=\"covishield\"\n            value=\"COVISHIELD\"\n            (click)=\"getHospitalData()\"\n            [(ngModel)]=\"vaccineType\"\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio2\">COVISHIELD</label>\n        </div>\n\n        <div class=\"form-check form-check-inline\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"vaccine\"\n            id=\"sputnik\"\n            value=\"SPUTNIK\"\n            (click)=\"getHospitalData()\"\n            [(ngModel)]=\"vaccineType\"\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio3\">SPUTNIK</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"vaccine\"\n            id=\"any\"\n            value=\"any\"\n            (click)=\"getHospitalData()\"\n            [(ngModel)]=\"vaccineType\"\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio3\">Any </label>\n        </div>\n      </div>\n    </div>\n    <br />\n    <!--\n        Age group\n       -->\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-check form-check-inline\">\n          <b>Age Group</b> &nbsp;\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"age\"\n            id=\"age18\"\n            value=\"18\"\n            [(ngModel)]=\"ageGroup\"\n            (click)=\"getHospitalData()\"\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio1\">18</label>\n        </div>\n\n        <div class=\"form-check form-check-inline\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"age\"\n            id=\"age45\"\n            value=\"45\"\n            [(ngModel)]=\"ageGroup\"\n            (click)=\"getHospitalData()\"\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio2\">45</label>\n        </div>\n      </div>\n    </div>\n    <br />\n    <!--\n        Fee\n       -->\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-check form-check-inline\">\n          <b>Fee</b> &nbsp;\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"price\"\n            id=\"free\"\n            (click)=\"getHospitalData()\"\n            value=\"Free\"\n            [(ngModel)]=\"vaccineFee\"\n          />\n          <label class=\"form-check-label\" for=\"free\">Free</label>\n        </div>\n\n        <div class=\"form-check form-check-inline\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"price\"\n            id=\"paid\"\n            (click)=\"getHospitalData()\"\n            value=\"Paid\"\n            [(ngModel)]=\"vaccineFee\"\n          />\n          <label class=\"form-check-label\" for=\"paid\">Paid</label>\n        </div>\n\n        <div class=\"form-check form-check-inline\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"price\"\n            id=\"any\"\n            (click)=\"getHospitalData()\"\n            value=\"Any\"\n            [(ngModel)]=\"vaccineFee\"\n          />\n          <label class=\"form-check-label\" for=\"any\">Any</label>\n        </div>\n\n      </div>\n    </div>\n\n    <br />\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-check form-check-inline\">\n          <b>Dose</b> &nbsp;\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"dose\"\n            id=\"dose1\"\n            value=\"dose1\"\n            [(ngModel)]=\"dose\"\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio1\">Dose1</label>\n        </div>\n\n        <div class=\"form-check form-check-inline\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"dose\"\n            id=\"dose2\"\n            value=\"dose2\"\n            [(ngModel)]=\"dose\"\n          />\n          <label class=\"form-check-label\" for=\"inlineRadio2\">Dose2</label>\n        </div>\n      </div>\n    </div>\n    <br />\n\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-check form-check-inline\">\n          <label class=\"form-check-label\" for=\"inlineRadio1\">Date</label>&nbsp;\n          <input\n            class=\"form-check-input\"\n            type=\"date\"\n            name=\"date\"\n            id=\"date\"\n            (change)=\"getHospitalData()\"\n            [(ngModel)]=\"date\"\n          />\n        </div>\n      </div>\n    </div>\n    <br />\n    <div class=\"row\">\n      <div class=\"col-4\">\n        States :\n        <select\n          class=\"custom-select\"\n          id=\"states\"\n          [(ngModel)]=\"selectedState\"\n          name=\"states\"\n          (change)=\"onChangeState($event.target.value)\"\n        >\n          <option value=\"\">Select</option>\n          <option *ngFor=\"let x of stateList\" [ngValue]=\"x.state_id\">\n            {{ x.state_name }}\n          </option>\n        </select>\n      </div>\n\n      <div class=\"col-4\">\n        Districts :\n        <select\n          class=\"custom-select\"\n          [(ngModel)]=\"selectedDistrict\"\n          id=\"district\"\n          name=\"districts\"\n          (change)=\"getHospitalData();refreshData()\"\n        >\n          <option value=\"\">Select</option>\n          <option *ngFor=\"let d of districtData\" [ngValue]=\"d.district_id\">\n            {{ d.district_name }}\n          </option>\n        </select>\n      </div>\n      <div class=\"col-4\">\n        <button\n              class=\"btn btn-secondary\"\n              type=\"button\"\n              (click)=\"stopRefresh()\"\n            >\n              Stop Search\n            </button>\n      </div>\n\n    </div>\n  </form>\n  <br>\n  <div class=\"row\" *ngIf=\"listOfData.length > 0\">\n    <div class=\"col-10\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Price</th>\n            <th scope=\"col\">Vaccine</th>\n            <th scope=\"col\">Date</th>\n            <th scope=\"col\">Dose1</th>\n            <th scope=\"col\">Dose2</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let data of listOfData; let i = index\">\n            <th scope=\"col\">{{ i +1}}</th>\n            <th scope=\"col\">{{ data.name }}</th>\n            <th scope=\"col\">{{ data.price }}</th>\n            <th scope=\"col\">{{ data.vaccine }}</th>\n            <th scope=\"col\">{{ data.date }}</th>\n            <th scope=\"col\">{{ data.dose1 }}</th>\n            <th scope=\"col\">{{ data.dose2 }}</th>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n","import { UiHelperService } from './ui-helper.service';\nimport { Component, OnInit } from '@angular/core';\nimport { CowinService } from './cowin.service';\nimport {HelperService} from './helper.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  //title = 'cowin-angular';\n  selectedState = \"\"\n  selectedDistrict = \"\"\n  stateList = [];\n  districtData = [];\n  vaccineType = \"COVAXIN\";\n  ageGroup = \"18\";\n  vaccineFee = \"Free\";\n  dose = \"dose1\";\n  date = new Date();\n  listOfData = []\n  mobile = \"\"\n  otp = ''\n  txnId = ''\n  showCancel = false;\n  disableMobile = false;\n  disableOtp = true;\n  refreshTime  = 5 //seconds\n  isRefresh = false;\n\n  constructor(  private api:CowinService, private helper:HelperService, private ui:UiHelperService) {\n    //this.date = new Date();\n   }\n  /**\n   *\n   */\n  ngOnInit() {\n    this.api.getStates()\n    .subscribe(data => {\n      this.stateList =  data['states']\n    })\n    this.vaccineType =\"COVAXIN\"\n    //this.date = new Date();\n  }\n  /**\n   *\n   * @param value\n   */\n  onChangeState(value:string): void{\n    this.districtData = [];\n    this.api.getDistricts(this.selectedState).subscribe(data => {\n      this.districtData = data['districts']\n    })\n  }\n\n  getDistrictsSessions(value:string){\n    this.api.getDistrictData(value, this.helper.getMMDDYYYY_calendar(this.date)).subscribe(data => {\n      this.listOfData = [];\n      //this.ui.generateTable(data,  this.listOfData, this.ageGroup);\n    })\n\n  }\n  /**\n   *\n   */\n  refreshData() {\n     setInterval(() => {\n        console.log('setTimeOut');\n        if (this.isRefresh)\n          this.getHospitalData()\n    }, this.refreshTime * 1000);\n  }\n\n  /**\n   *\n   * @param value\n   */\n  getHospitalData(): void{\n    if (this.selectedState == '' && this.selectedDistrict == '') return;\n    this.isRefresh =true;\n    this.api.getDistrictData(this.selectedDistrict, this.helper.getMMDDYYYY_calendar(this.date)).subscribe(data => {\n      this.listOfData = this.ui.generateTable(data,  this.listOfData, this.ageGroup, this.vaccineType, this.vaccineFee);\n    });\n    //this.refreshData()\n\n  }\n  sendOtp(){\n    this.disableMobile = true;\n    this.disableOtp = false;\n    this.api.getOtp(this.mobile).subscribe(data => {\n      this.txnId = data['txnId'];\n    })\n  }\n\n  validateOtp(){\n\n    this.api.validateOtp(this.otp, this.txnId).subscribe(data => {\n      localStorage.setItem(\"token\", data['token']);\n    })\n  }\n  cancelLogin(){\n    this.showCancel = false;\n    this.disableMobile = false;\n    this.disableOtp = true;\n    localStorage.clear()\n  }\n  stopRefresh(){\n    this.isRefresh = false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n\n  constructor() { }\n\n  getAuthHeaders(){\n    const headers= new HttpHeaders()\n    .set('content-type', 'application/json')\n    .set('Authorization', 'Bearer ' + localStorage.getItem('token'))\n    //.set('Access-Control-Allow-Headers', 'X-API-KEY, Origin, X-Requested-With, Content-Type, Accept, Access-Control-Request-Method, Authorization')\n    //.set('Access-Control-Allow-Origin', '*')\n    //.set('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, DELETE, PATCH');\n    return headers;\n  }\n  getHeaders(){\n    let headers = {\n      'accept': 'application/json',\n\n    }\n    return headers;\n  }\n\n   getMMDDYYYY() {\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1;\n    let yyyy = today.getFullYear();\n    return mm + '-' + dd + '-' + yyyy;\n  }\n\n  getMMDDYYYY_calendar(date:Date) {\n    let today = new Date(date);\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1;\n    let yyyy = today.getFullYear();\n    return mm + '-' + dd + '-' + yyyy;\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {HelperService} from './helper.service'\nimport {environment} from '../environments/environment'\nimport { sha256, sha224 } from 'js-sha256';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CowinService {\n\n  SECRET =  \"U2FsdGVkX1+z/4Nr9nta+2DrVJSv7KS6VoQUSQ1ZXYDx/CJUkWxFYG6P3iM/VW+6jLQ9RDQVzp/RcZ8kbT41xw==\"\n  SEND_OTP = environment.cowin + \"/auth/generateMobileOTP\"\n  STATES = environment.cowin +  '/admin/location/states'\n  DISTRICTS = environment.cowin + '/admin/location/districts/'\n  VALIDATE_OTP = environment.cowin + '/auth/validateMobileOtp'\n\n  constructor(private http: HttpClient, private helperService: HelperService) { }\n\n  getDistrictData(value:string, date:string):  Observable<any>{\n    let url = '/appointment/sessions/public/calendarByDistrict?district_id='+value+'&date='+ date\n    return this.http.get(environment.cowin + url, { headers: this.helperService.getHeaders()})\n  }\n\n  encrpt(otp:string){\n    return sha256(otp.toString());\n  }\n\n\n  getStates():  Observable<any>{\n    return this.http.get(this.STATES, { headers: this.helperService.getHeaders()})\n  }\n\n  getDistricts(id:string):  Observable<any>{\n    return this.http.get(this.DISTRICTS+id, { headers: this.helperService.getHeaders()})\n  }\n\n  getOtp(number:string):  Observable<any>{\n    let json = {}\n    json[\"mobile\"]=  number\n    json['secret'] = this.SECRET\n    return this.http.post( this.SEND_OTP,json, { headers: this.helperService.getHeaders()})\n  }\n\n  validateOtp(otp:string, txn:string):  Observable<any>{\n    let json = {}\n    json[\"otp\"]=  this.encrpt(otp)\n    json['txnId'] = txn\n    return this.http.post( this.VALIDATE_OTP, json, { headers: this.helperService.getHeaders()})\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UiHelperService {\n\n  constructor() { }\n\n  generteData(centers:any,sessions:any,j :number){\n    let json:any = {}\n    json['name'] =  centers['name']+ centers['block_name'];\n    json['vaccine'] =  sessions[j]['vaccine'];\n    json['date'] =  sessions[j]['date'];\n    json['dose1'] = sessions[j]['available_capacity_dose1']\n    json['dose2'] = sessions[j]['available_capacity_dose2']\n    json['min_age'] = sessions[j]['min_age_limit']\n    json['price'] = centers['fee_type']\n    return json\n  }\n\n  generateTable(data:any, listOfData:any, age:string, vaccineType:string, fee:string){\n    listOfData = [];\n    for (let i=0;i < data['centers'].length;i++){\n      let centers  = data['centers'][i];\n      let sessions  = data['centers'][i]['sessions'];\n      for (let j=0;j<sessions.length;j++){\n        let json = {};\n        if (vaccineType == \"any\"\n            && sessions[j]['min_age_limit'] == parseInt(age) && fee == centers['fee_type']){\n           json = this.generteData(centers, sessions, j)\n           listOfData.push(json)\n        }\n         else if (sessions[j]['min_age_limit'] == parseInt(age)\n          && vaccineType == sessions[j]['vaccine'] && fee == centers['fee_type']){\n           json = this.generteData(centers, sessions, j)\n           listOfData.push(json)\n         } else if (sessions[j]['min_age_limit'] == parseInt(age)\n         && vaccineType == sessions[j]['vaccine'] && fee == \"Any\"){\n          json = this.generteData(centers, sessions, j)\n          listOfData.push(json)\n         }\n      }\n    }\n    return listOfData\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}